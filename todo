*A list of found issues to be fixed*

# Parsing:

> [√] handel expand without key and with key for value = "" or val = nothing
---
> [√] "bash-3.2$ "
---
> [√] "bash: syntax error near unexpected token 1"
---
> [√] "bash: sla: command not found"
---
> [√] "bash-3.2$ cat << ls"
---
> [√] "> $?"
---
> [√] "> ls"
---
> [√] "127"
---
> [x] Heredoc should not expand when the dilimter is in quotes.
---
> [x] "exit | exit" should not print anything, should be handleded in pasring, then send me a flag through data.
---
> [√] bash-3.2$ export a="'''''"
bash-3.2$ $a
bash: '''''' : command not found
bash-3.2$
and
msh$  export a="'''''''"
msh$ $a
msh: : command not found
Segmentation fault: 11
---
> [√] msh$ export a="         "
msh$ ls$a-la
msh: ls-la: command not found // should run
msh$
---
> [√] bash-3.2$ cat << $"d"
> d
bash-3.2$ cat << $$"d"
> $$d
bash-3.2$ cat << $$$"d"
> $$d

msh$ las
msh: las: command not found
minishell(8050,0x11f33adc0) malloc: *** error for object 0x7fb77de07480: pointer being freed was not allocated
minishell(8050,0x11f33adc0) malloc: *** set a breakpoint in malloc_error_break to debug
msh$ ""
msh: : command not found
minishell(8231,0x11f33adc0) malloc: *** error for object 0x7fb77f005940: pointer being freed was not allocated
minishell(8231,0x11f33adc0) malloc: *** set a breakpoint in malloc_error_break to

msh$ a
msh: a: command not found
minishell(86451,0x11d6a0dc0) malloc: *** error for object 0x7fce32f041c0: pointer being freed was not allocated
minishell(86451,0x11d6a0dc0) malloc: *** set a breakpoint in malloc_error_break to debug

----
> [√] bash-3.2$ ls > $EMTY
bash: $EMTY: ambiguous redirect
msh$ ls > $EMTY
msh: No such file or directory
---
> [√] msh$ export a="''''''"
msh$ export a="q s d"
msh$ export a=$a
msh$ export $a""
msh$ export // makhtalf


# Execution:

> [√] NULL case:
	"bash-3.2$ <file.txt<file.txt if the file doest exist"
	"bash: ls: No such file or directory"
---
> [√] Ctrl+\ should not exit the msh.
---
> [√] Exit status case:
	bash-3.2$ /bin/sleep 5   // for ctrl-c
	^C
	bash-3.2$ echo  $?
	130
	bash-3.2$
	msh$ /bin/sleep 10
	msh$ echo $?
	1
	and for ctrl-\
	bash-3.2$ grep ls
	^\Quit: 3
	bash-3.2$ $?
	bash: 131: command not found
	msh$ grep lsa
	msh$ $?
	msh: 1: command not found
	msh$
---
> [√] env should always have `OLDPWD` `PATH` `PWD` `SHLVL`.
---
> [√] Ctrl+C Ctrl+D exit_status should be 1.
---
> [√] execve should work even with no PATH.
---
> [x] Use printf for buffering instead of write
---
> [x] Save a backup "PWD" that commands can fall on.
---
> [x] Multiple pipes fork issue.


one
You have access to multiple processes named minishell:
    a) 36388 ./minishell
    b) 14821 ./minishell
Which process? (letter or PID)













cat << $"s"
=================================================================
==39324==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003594 at pc 0x000103718aaa bp 0x7ffeec503cc0 sp 0x7ffeec503cb8
WRITE of size 1 at 0x602000003594 thread T0
    #0 0x103718aa9 in msh_heredoc_chval+0x2a9 (minishell:x86_64+0x10001daa9)
    #1 0x1037168de in msh_new_red_node+0x24e (minishell:x86_64+0x10001b8de)
    #2 0x103717f2a in msh_red_list+0x6ba (minishell:x86_64+0x10001cf2a)
    #3 0x103719a3a in before_pip+0x50a (minishell:x86_64+0x10001ea3a)
    #4 0x103718fff in msh_tree+0x1ef (minishell:x86_64+0x10001dfff)
    #5 0x103719bdb in to_parse+0xfb (minishell:x86_64+0x10001ebdb)
    #6 0x1036feb76 in main+0x4e6 (minishell:x86_64+0x100003b76)
    #7 0x7fff67649cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

0x602000003594 is located 0 bytes to the right of 4-byte region [0x602000003590,0x602000003594)
allocated by thread T0 here:
    #0 0x1037d017d in wrap_malloc+0x9d (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4917d)
    #1 0x1037068cc in gc_malloc+0x1fc (minishell:x86_64+0x10000b8cc)
    #2 0x103718881 in msh_heredoc_chval+0x81 (minishell:x86_64+0x10001d881)
    #3 0x1037168de in msh_new_red_node+0x24e (minishell:x86_64+0x10001b8de)
    #4 0x103717f2a in msh_red_list+0x6ba (minishell:x86_64+0x10001cf2a)
    #5 0x103719a3a in before_pip+0x50a (minishell:x86_64+0x10001ea3a)
    #6 0x103718fff in msh_tree+0x1ef (minishell:x86_64+0x10001dfff)
    #7 0x103719bdb in to_parse+0xfb (minishell:x86_64+0x10001ebdb)
    #8 0x1036feb76 in main+0x4e6 (minishell:x86_64+0x100003b76)
    #9 0x7fff67649cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

SUMMARY: AddressSanitizer: heap-buffer-overflow (minishell:x86_64+0x10001daa9) in msh_heredoc_chval+0x2a9
Shadow bytes around the buggy address:
  0x1c0400000660: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd
  0x1c0400000670: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd
  0x1c0400000680: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00
  0x1c0400000690: fa fa fd fd fa fa 00 04 fa fa 00 04 fa fa 04 fa
  0x1c04000006a0: fa fa 05 fa fa fa fd fa fa fa 04 fa fa fa 00 00
=>0x1c04000006b0: fa fa[04]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c04000006c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c04000006d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c04000006e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c04000006f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==39324==ABORTING
Abort trap: 6
